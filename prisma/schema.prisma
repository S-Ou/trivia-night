// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Config {
  id        String   @id @default(cuid())
  name      String
  value     String
  createdAt DateTime @default(now())

  @@unique([name])
}

enum QuestionType {
  multiChoice
  shortAnswer
}

model Question {
  id        String   @id @default(cuid())
  question  String
  questionType QuestionType
  createdAt    DateTime       @default(now())

  currentQuestions CurrentQuestion[]

  Option Option[]
}

model Option {
  id        String   @id @default(cuid())
  questionId String
  option    String
  isCorrect Boolean

  question Question @relation(fields: [questionId], references: [id], onDelete: Cascade)

  @@unique([questionId, option])
}


model Category {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())

  CurrentQuestion CurrentQuestion[]
  CurrentCategory CurrentCategory[]
}

model CurrentQuestion {
  questionId String
  categoryId String
  indexWithinCategory Int

  question   Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  @@id([questionId, categoryId])
	@@map("CurrentQuestion")
}

model CurrentCategory {
  categoryId String
  index Int

  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  @@id([categoryId, index])
  @@map("CurrentCategory")
}
